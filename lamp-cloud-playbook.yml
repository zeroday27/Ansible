# This playbook installs a complete LAMP stack on Ubuntu, Amazon Linux 2, or CentOS

- hosts: localhost
  become: yes
  become_method: sudo
  tasks:
    - name: Set timezone to Asia/HongKong
      community.general.timezone:
        name: "Asia/Hong_Kong"
    - name: Set a hostname
      ansible.builtin.hostname:
        name: ansiblecontrol01
    - name: Install Apache on Ubuntu
      apt:
        name: apache2
        state: present
      when: ansible_distribution == 'Ubuntu'
    - name: Install Apache on Amazon Linux
      yum:
        name: httpd
        state: present
      when: ansible_distribution == 'Amazon' or ansible_distribution == 'CentOS'
    - name: Install MySQL on Ubuntu
      apt:
        name: mysql-server
        state: present
      when: ansible_distribution == 'Ubuntu'
    - name: Install Maria DB  on Amazon Linux
      yum:
        name: mariadb-server
        state: present
      when: ansible_distribution == 'Amazon' or ansible_distribution == 'CentOS'
    - name: Install PHP on Ubuntu 
      apt:
        name: 
          - php 
          - libapache2-mod-php
          - php-mysql
          - python3-pip
        state: present
      when: ansible_distribution == 'Ubuntu'
    - name: Install PHP on Amazon Linux
      yum:
        name: php php-mysqlnd python3-pip
        state: present
      when: ansible_distribution == 'Amazon' or ansible_distribution == 'CentOS'
    - name: Make sure install pymysql 
      pip: 
        name: pymysql
        state: present
        executable: pip3
    - name: Start Apache on Ubuntu 
      service:
        name: apache2
        state: started
      when: ansible_distribution == 'Ubuntu'
    - name: Start Apache on Amazon Linux 
      service:
        name: httpd
        state: started
      when: ansible_distribution == 'Amazon' or ansible_distribution == 'CentOS'
    - name: Start MySQL on Ubuntu
      service:
        name: mysql
        state: started
      when: ansible_distribution == 'Ubuntu'
    - name: Start Maria DB on Amazon Linux 
      service:
        name: mariadb
        state: started
      when: ansible_distribution == 'Amazon' or ansible_distribution == 'CentOS'
    - name: Create a test page
      copy:
        content: "<html><body><h1>Hello World! Ansible Deployment</h1></body></html>"
        dest: /var/www/html/index.html
    - name: Create MySQL users
      mysql_user:
        name: "{{ item.name }}"
        password: "{{ item.password }}"
        priv: "*.*:ALL"
        state: present
      loop:
        - { name: 'dbadmin01', password: 'password' }
    - name: Install mod_ssl on Amazon Linux
      yum:
        name: mod_ssl
        state: present
      when: ansible_distribution == 'Amazon' or ansible_distribution == 'CentOS'
    - name: Redirect http to https
      blockinfile:
        path: /etc/httpd/conf/httpd.conf
        block: |
          RewriteEngine On
          RewriteCond %{HTTPS} off
          RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
      when: ansible_distribution == 'Amazon' or ansible_distribution == 'CentOS'
    - name: Enable HSTS
      blockinfile:
        path: /etc/httpd/conf/httpd.conf
        block: |
          Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
      when: ansible_distribution == 'Amazon' or ansible_distribution == 'CentOS'
    - name: Enable XSS protection
      blockinfile:
        path: /etc/httpd/conf/httpd.conf
        block: |
          Header set X-XSS-Protection "1; mode=block"
      when: ansible_distribution == 'Amazon' or ansible_distribution == 'CentOS'
    - name: Ensure group "sftp group" exists
      ansible.builtin.group:
        name: sftp
        state: present 
    - name: Create SFTP user
      user:
        name: ftpuser01
        shell: /sbin/nologin
        groups: sftp
        createhome: yes
        home: /sftp/ftpuser01
    - name: Set FTP root directory to Apache project folder
      set_fact:
        ftp_root: /var/www/html
      when: ansible_distribution == 'Ubuntu'
    - name: Set FTP root directory to Apache project folder
      set_fact:
        ftp_root: /var/www/html
      when: ansible_distribution == 'Amazon' or ansible_distribution == 'CentOS'
    - name: Configure SFTP
      blockinfile:
        path: /etc/ssh/sshd_config
        block: |
          Match Group sftp
          ChrootDirectory {{ ftp_root }}
          ForceCommand internal-sftp
          AllowTcpForwarding no
          X11Forwarding no
    - name: Restart sshd
      service:
        name: sshd
